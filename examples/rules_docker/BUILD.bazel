load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@debian_packages//:packages.bzl", "debian_package")
load("@rules_debian_packages//debian_packages:defs.bzl", "debian_packages_lockfile")

package(default_visibility = ["//visibility:public"])

container_image(
    name = "image",
    debs = [
        # required to replicate distroless/static
        debian_package("base-files"),
        debian_package("netbase"),
        debian_package("tzdata"),
        debian_package("ca-certificates"),
        # required to replicate distroless/base
        debian_package("libc6"),
        debian_package("libssl3"),
        debian_package("openssl"),
        # required to replicate distroless/cc
        debian_package("libgcc-s1"),
        debian_package("libgomp1"),
        debian_package("libstdc++6"),
        # required to replicate distroless/python
        debian_package("dash"),
        debian_package("libc-bin"),
        debian_package("python3.11-minimal"),
        debian_package("libpython3.11-stdlib"),
        debian_package("python3-distutils"),
    ],
    entrypoint = ["/usr/bin/python3.11"],
    env = {"LANG": "C.UTF-8"},
    symlinks = {
        "/usr/bin/python": "/usr/bin/python3.11",
        "/usr/bin/python3": "/usr/bin/python3.11",
    },
    visibility = ["//visibility:private"],
)

# Generate lockfile with:
# bazel run :debian_packages.generate
# Update snapshots with:
# bazel run :debian_packages.update
debian_packages_lockfile(
    name = "debian_packages",
    lock_file = "packages.lock",
    packages_file = "packages.yaml",
    snapshots_file = "snapshots.yaml",
)
